{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yalian/Documents/Projects/hooq/client/src/components/tvdetails.component.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardTitle, CardText, CardSubtitle, Button, Jumbotron, Container, ListGroup, ListGroupItem } from \"reactstrap\";\nimport _ from \"lodash\";\nimport { PropTypes } from \"prop-types\";\n\nvar TVDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TVDetails, _Component);\n\n  function TVDetails(props) {\n    var _this;\n\n    _classCallCheck(this, TVDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TVDetails).call(this, props));\n\n    _this.getDetailsById =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(tvId) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.request(\"/api/tv/\".concat(tvId));\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getEpisodesBySeasonNumber =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var season_number,\n          tvId,\n          response,\n          body,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              season_number = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 1;\n              tvId = _this.props.match.params.tvId;\n              _context2.next = 4;\n              return fetch(\"/api/episodes/\".concat(tvId, \"/\").concat(season_number));\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return response.json();\n\n            case 7:\n              body = _context2.sent;\n\n              if (!(response.status !== 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 10:\n              return _context2.abrupt(\"return\", body);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.state = {\n      details: {},\n      episodes: []\n    };\n    return _this;\n  }\n\n  _createClass(TVDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getDetailsById(this.props.match.params.tvId).then(function (res) {\n        _this2.setState({\n          details: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      this.getEpisodes();\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(url) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch(url);\n\n              case 2:\n                response = _context3.sent;\n                _context3.next = 5;\n                return response.json();\n\n              case 5:\n                body = _context3.sent;\n\n                if (!(response.status !== 200)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                throw Error(body.message);\n\n              case 8:\n                return _context3.abrupt(\"return\", body);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function request(_x2) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"getEpisodes\",\n    value: function getEpisodes(season_number) {\n      var _this3 = this;\n\n      this.getEpisodesBySeasonNumber(season_number).then(function (res) {\n        return _this3.setState({\n          episodes: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var seasons = _.map(this.state.details.seasons, function (s) {\n        return s.season_number !== 0 ? React.createElement(\"p\", {\n          key: s.season_number,\n          className: \"season\",\n          onClick: function onClick() {\n            return _this4.getEpisodes(s.season_number);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, s.name) : null;\n      });\n\n      var episodes = _.map(this.state.episodes, function (e, index) {\n        return React.createElement(ListGroupItem, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, e.name);\n      });\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"TV Shows\"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Check out the most popular TV Shows.\")))), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        className: \"poster\",\n        src: \"https://image.tmdb.org/t/p/w200/\".concat(this.state.details.poster_path),\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.details.original_name), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.details.number_of_seasons, \" Seasons\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.details.number_of_episodes, \" Episodes\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.details.overview), React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Watch\"))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        className: \"seasons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, seasons), React.createElement(CardBody, {\n        className: \"episodes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, episodes)))));\n    }\n  }]);\n\n  return TVDetails;\n}(Component);\n\nTVDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default TVDetails;","map":{"version":3,"sources":["/Users/yalian/Documents/Projects/hooq/client/src/components/tvdetails.component.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","CardText","CardSubtitle","Button","Jumbotron","Container","ListGroup","ListGroupItem","_","PropTypes","TVDetails","props","getDetailsById","tvId","request","getEpisodesBySeasonNumber","season_number","match","params","fetch","response","json","body","status","Error","message","state","details","episodes","then","res","setState","catch","err","console","log","getEpisodes","url","seasons","map","s","name","e","index","textAlign","poster_path","original_name","number_of_seasons","number_of_episodes","overview","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  Button,\n  Jumbotron,\n  Container,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { PropTypes } from \"prop-types\";\n\nclass TVDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { details: {}, episodes: [] };\n  }\n\n  componentDidMount() {\n    this.getDetailsById(this.props.match.params.tvId)\n      .then(res => {\n        this.setState({ details: res });\n      })\n      .catch(err => console.log(err));\n\n    this.getEpisodes();\n  }\n\n  async request(url) {\n    const response = await fetch(url);\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  }\n\n  getDetailsById = async tvId => {\n    return await this.request(`/api/tv/${tvId}`);\n    // const response = await fetch(`/api/tv/${tvId}`);\n    // const body = await response.json();\n    // if (response.status !== 200) throw Error(body.message);\n    // return body;\n  };\n\n  getEpisodesBySeasonNumber = async (season_number = 1) => {\n    const tvId = this.props.match.params.tvId;\n    const response = await fetch(`/api/episodes/${tvId}/${season_number}`);\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  getEpisodes(season_number) {\n    this.getEpisodesBySeasonNumber(season_number)\n      .then(res => this.setState({ episodes: res }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const seasons = _.map(this.state.details.seasons, s =>\n      s.season_number !== 0 ? (\n        <p\n          key={s.season_number}\n          className=\"season\"\n          onClick={() => this.getEpisodes(s.season_number)}\n        >\n          {s.name}\n        </p>\n      ) : null\n    );\n\n    const episodes = _.map(this.state.episodes, (e, index) => (\n      <ListGroupItem key={index}>{e.name}</ListGroupItem>\n    ));\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <Jumbotron fluid>\n            <Container fluid>\n              <h1 className=\"display-3\">TV Shows</h1>\n              <p className=\"lead\">Check out the most popular TV Shows.</p>\n            </Container>\n          </Jumbotron>\n        </div>\n\n        <div className=\"container\">\n          <Card>\n            <CardImg\n              className=\"poster\"\n              src={`https://image.tmdb.org/t/p/w200/${\n                this.state.details.poster_path\n              }`}\n              alt=\"\"\n            />\n            <CardBody className=\"description\">\n              <CardTitle className=\"title\">\n                {this.state.details.original_name}\n              </CardTitle>\n              <CardSubtitle>\n                <p>{this.state.details.number_of_seasons} Seasons</p>\n                <p>{this.state.details.number_of_episodes} Episodes</p>\n              </CardSubtitle>\n\n              <hr />\n              <CardText>{this.state.details.overview}</CardText>\n              <Button color=\"primary\">Watch</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardTitle className=\"seasons\">{seasons}</CardTitle>\n            <CardBody className=\"episodes\">\n              <ListGroup>{episodes}</ListGroup>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nTVDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\n\nexport default TVDetails;\n"]},"metadata":{},"sourceType":"module"}