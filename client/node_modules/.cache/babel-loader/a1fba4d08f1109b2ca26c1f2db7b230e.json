{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yalian/Documents/Projects/hooq/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yalian/Documents/Projects/hooq/client/src/components/tvshows.component.js\";\nimport React, { Component } from \"react\";\nimport { Jumbotron, Container, Card, CardImg, CardGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nvar TVShows =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TVShows, _Component);\n\n  function TVShows(props) {\n    var _this;\n\n    _classCallCheck(this, TVShows);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TVShows).call(this, props));\n    _this.getTop20TVs =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/tv\");\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.state = {\n      TVList: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TVShows, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.getTop20TVs().then(function (res) {\n        _this2.setState({\n          TVList: res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var displayDiscoverTVs = _.map(this.state.TVList, function (tv, index) {\n        return React.createElement(Card, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/tv/\".concat(tv.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          src: \"https://image.tmdb.org/t/p/w200\".concat(tv.poster_path),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })));\n      });\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"TV Shows\"), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Check out the most popular TV Shows.\")))), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CardGroup, {\n        className: \"flex-container wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, displayDiscoverTVs)));\n    }\n  }]);\n\n  return TVShows;\n}(Component);\n\nexport default TVShows;","map":{"version":3,"sources":["/Users/yalian/Documents/Projects/hooq/client/src/components/tvshows.component.js"],"names":["React","Component","Jumbotron","Container","Card","CardImg","CardGroup","Link","_","TVShows","props","getTop20TVs","fetch","response","json","body","status","Error","message","state","TVList","then","res","setState","catch","err","console","log","displayDiscoverTVs","map","tv","index","id","poster_path","textAlign"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,OAArC,EAA8CC,SAA9C,QAA+D,YAA/D;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AADiB,UAOnBC,WAPmB;AAAA;AAAA;AAAA;AAAA,6BAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWC,KAAK,CAAC,SAAD,CADhB;;AAAA;AACNC,cAAAA,QADM;AAAA;AAAA,qBAEOA,QAAQ,CAACC,IAAT,EAFP;;AAAA;AAENC,cAAAA,IAFM;;AAAA,oBAGRF,QAAQ,CAACG,MAAT,KAAoB,GAHZ;AAAA;AAAA;AAAA;;AAAA,oBAGuBC,KAAK,CAACF,IAAI,CAACG,OAAN,CAH5B;;AAAA;AAAA,+CAILH,IAJK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPK;AAGjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAHiB;AAMlB;;;;yCAQoB;AAAA;;AACnB,WAAKT,WAAL,GACGU,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEH,UAAAA,MAAM,EAAEE;AAAV,SAAd;AACD,OAHH,EAIGE,KAJH,CAIS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAJZ;AAKD;;;6BACQ;AACP,UAAMG,kBAAkB,GAAGpB,CAAC,CAACqB,GAAF,CAAM,KAAKV,KAAL,CAAWC,MAAjB,EAAyB,UAACU,EAAD,EAAKC,KAAL,EAAe;AACjE,eACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,gBAASD,EAAE,CAACE,EAAZ,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AACE,UAAA,GAAG,2CAAoCF,EAAE,CAACG,WAAvC,CADL;AAEE,UAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;AAUD,OAX0B,CAA3B;;AAYA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFF,CADF,CADF,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,kBADH,CADF,CAVF,CADF;AAkBD;;;;EArDmB3B,S;;AAwDtB,eAAeQ,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Jumbotron, Container, Card, CardImg, CardGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass TVShows extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      TVList: \"\"\n    };\n  }\n  getTop20TVs = async () => {\n    const response = await fetch(\"/api/tv\");\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  componentWillMount() {\n    this.getTop20TVs()\n      .then(res => {\n        this.setState({ TVList: res });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const displayDiscoverTVs = _.map(this.state.TVList, (tv, index) => {\n      return (\n        <Card key={index}>\n          <Link to={`/tv/${tv.id}`}>\n            <CardImg\n              src={`https://image.tmdb.org/t/p/w200${tv.poster_path}`}\n              alt=\"\"\n            />\n          </Link>\n        </Card>\n      );\n    });\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <Jumbotron fluid>\n            <Container fluid>\n              <h1 className=\"display-3\">TV Shows</h1>\n              <p className=\"lead\">Check out the most popular TV Shows.</p>\n            </Container>\n          </Jumbotron>\n        </div>\n\n        <div className=\"container\">\n          <CardGroup className=\"flex-container wrap\">\n            {displayDiscoverTVs}\n          </CardGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TVShows;\n"]},"metadata":{},"sourceType":"module"}