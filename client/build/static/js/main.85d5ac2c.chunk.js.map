{"version":3,"sources":["components/tvshows.component.js","components/tvdetails.component.js","components/app.component.js","index.js"],"names":["TVShows","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getTop20TVs","asyncToGenerator","regenerator_default","a","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","state","TVList","_this2","then","res","setState","catch","err","console","log","displayDiscoverTVs","_","map","tv","index","react_default","createElement","Card","key","Link","to","concat","id","CardImg","src","poster_path","alt","style","textAlign","Jumbotron","fluid","Container","className","CardGroup","Component","TVDetails","getDetailsById","_ref","tvId","request","_x","apply","arguments","getEpisodesBySeasonNumber","_callee2","season_number","_args2","_context2","length","undefined","match","params","details","episodes","getEpisodes","url","_this3","_this4","seasons","s","onClick","name","e","ListGroupItem","CardBody","CardTitle","original_name","CardSubtitle","number_of_seasons","number_of_episodes","CardText","overview","Button","color","ListGroup","defaultProps","App","isOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Route","exact","path","component","ReactDOM","render","BrowserRouter","app_component","document","getElementById"],"mappings":"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","file":"static/js/main.85d5ac2c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Jumbotron, Container, Card, CardImg, CardGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass TVShows extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      TVList: \"\"\n    };\n  }\n  getTop20TVs = async () => {\n    const response = await fetch(\"/api/tv\");\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  componentWillMount() {\n    this.getTop20TVs()\n      .then(res => {\n        this.setState({ TVList: res });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const displayDiscoverTVs = _.map(this.state.TVList, (tv, index) => {\n      return (\n        <Card key={index}>\n          <Link to={`/tv/${tv.id}`}>\n            <CardImg\n              src={`https://image.tmdb.org/t/p/w200${tv.poster_path}`}\n              alt=\"\"\n            />\n          </Link>\n        </Card>\n      );\n    });\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <Jumbotron fluid>\n            <Container fluid>\n              <h1 className=\"display-3\">TV Shows</h1>\n              <p className=\"lead\">Check out the most popular TV Shows.</p>\n            </Container>\n          </Jumbotron>\n        </div>\n\n        <div className=\"container\">\n          <CardGroup className=\"flex-container wrap\">\n            {displayDiscoverTVs}\n          </CardGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TVShows;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  Button,\n  Jumbotron,\n  Container,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { PropTypes } from \"prop-types\";\n\nclass TVDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { details: {}, episodes: [] };\n  }\n\n  componentDidMount() {\n    this.getDetailsById(this.props.match.params.tvId)\n      .then(res => {\n        this.setState({ details: res });\n      })\n      .catch(err => console.log(err));\n\n    this.getEpisodes();\n  }\n\n  async request(url) {\n    const response = await fetch(url);\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  }\n\n  getDetailsById = async tvId => {\n    return await this.request(`/api/tv/${tvId}`);\n  };\n\n  getEpisodesBySeasonNumber = async (season_number = 1) => {\n    const tvId = this.props.match.params.tvId;\n    return await this.request(`/api/episodes/${tvId}/${season_number}`);\n  };\n\n  getEpisodes(season_number) {\n    this.getEpisodesBySeasonNumber(season_number)\n      .then(res => this.setState({ episodes: res }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const seasons = _.map(this.state.details.seasons, s =>\n      s.season_number !== 0 ? (\n        <p\n          key={s.season_number}\n          className=\"season\"\n          onClick={() => this.getEpisodes(s.season_number)}\n        >\n          {s.name}\n        </p>\n      ) : null\n    );\n\n    const episodes = _.map(this.state.episodes, (e, index) => (\n      <ListGroupItem key={index}>{e.name}</ListGroupItem>\n    ));\n\n    return (\n      <div>\n        <div style={{ textAlign: \"center\" }}>\n          <Jumbotron fluid>\n            <Container fluid>\n              <h1 className=\"display-3\">TV Shows</h1>\n              <p className=\"lead\">Check out the most popular TV Shows.</p>\n            </Container>\n          </Jumbotron>\n        </div>\n\n        <div className=\"container\">\n          <Card>\n            <CardImg\n              className=\"poster\"\n              src={`https://image.tmdb.org/t/p/w200/${\n                this.state.details.poster_path\n              }`}\n              alt=\"\"\n            />\n            <CardBody className=\"description\">\n              <CardTitle className=\"title\">\n                {this.state.details.original_name}\n              </CardTitle>\n              <CardSubtitle>\n                <p>{this.state.details.number_of_seasons} Seasons</p>\n                <p>{this.state.details.number_of_episodes} Episodes</p>\n              </CardSubtitle>\n\n              <hr />\n              <CardText>{this.state.details.overview}</CardText>\n              <Button color=\"primary\">Watch</Button>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardTitle className=\"seasons\">{seasons}</CardTitle>\n            <CardBody className=\"episodes\">\n              <ListGroup>{episodes}</ListGroup>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nTVDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\n\nTVDetails.defaultProps = {\n  match: {\n    params: {\n      tvId: \"\"\n    }\n  }\n};\n\nexport default TVDetails;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Collapse,\n  Nav,\n  NavbarToggler,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport TVShows from \"./tvshows.component\";\nimport TVDetails from \"./tvdetails.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const toggle = () => {\n      this.setState({ isOpen: !this.state.isOpen });\n    };\n\n    return (\n      <div className=\"app\">\n        <div>\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\">HOOQ</NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"/\">TV Shows</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n        <Route exact path=\"/\" component={TVShows} />\n        <Route path=\"/tv/:tvId\" component={TVDetails} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./components/app.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}